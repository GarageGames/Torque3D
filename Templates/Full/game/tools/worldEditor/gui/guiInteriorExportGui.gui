//--- OBJECT WRITE BEGIN ---
%guiContent = new GuiControl(InteriorExportGui, EditorGuiGroup) {
   canSaveDynamicFields = "0";
   Profile = "ToolsGuiOverlayProfile";
   Enabled = "1";
   isContainer = "1";
   HorizSizing = "right";
   VertSizing = "bottom";
   Position = "0 0";
   Extent = "1024 768";
   MinExtent = "8 2";
   canSave = "1";
   Visible = "1";
   hovertime = "1000";

   new GuiWindowCtrl(InteriorExportWindow) {
      profile = "ToolsGuiWindowProfile";
      canSaveDynamicFields = "0";
      internalName = "InteriorExport";
      Enabled = "1";
      isContainer = "1";
      HorizSizing = "center";
      VertSizing = "center";
      Position = "248 248";
      Extent = "290 235";
      MinExtent = "8 2";
      canSave = "1";
      Visible = "1";
      hovertime = "1000";
      Margin = "0 0 0 0";
      Padding = "0 0 0 0";
      AnchorTop = "1";
      AnchorBottom = "1";
      AnchorLeft = "1";
      AnchorRight = "1";
      resizeWidth = "0";
      resizeHeight = "0";
      canMove = "1";
      canClose = "1";
      canMinimize = "0";
      canMaximize = "0";
      minSize = "50 50";
      closeCommand = "InteriorExportGui.close();";
      EdgeSnap = "0";
      canCollapse = "0";
      text = "Export Interiors to COLLADA";

      new GuiScrollCtrl() {
         canSaveDynamicFields = "0";
         Enabled = "1";
         isContainer = "1";
         HorizSizing = "right";
         VertSizing = "bottom";
         Position = "9 43";
         Extent = "272 112";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         willFirstRespond = "1";
         hScrollBar = "alwaysOff";
         vScrollBar = "dynamic";
         lockHorizScroll = "true";
         lockVertScroll = "false";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiListBoxCtrl(InteriorSelectListBox) {
            canSaveDynamicFields = "0";
            Enabled = "1";
            isContainer = "0";
            HorizSizing = "right";
            VertSizing = "bottom";
            Position = "2 2";
            Extent = "248 104";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
            AllowMultipleSelections = "1";
            fitParentWidth = "1";
         };
      };
      new GuiTextCtrl() {
         canSaveDynamicFields = "0";
         Enabled = "1";
         isContainer = "0";
         HorizSizing = "right";
         VertSizing = "bottom";
         Position = "9 25";
         Extent = "88 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         Margin = "0 0 0 0";
         Padding = "0 0 0 0";
         AnchorTop = "1";
         AnchorBottom = "0";
         AnchorLeft = "1";
         AnchorRight = "0";
         text = "Select Interior(s):";
         maxLength = "1024";
      };
      new GuiCheckBoxCtrl(InteriorSelectAllToggle) {
         profile = "ToolsGuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "9 158";
         extent = "248 23";
         minExtent = "8 8";
         visible = "1";
         text = "  Select / deselect all";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
            maxLength = "255";
      };
      new GuiCheckBoxCtrl(InteriorExportTransToggle) {
         profile = "ToolsGuiCheckBoxProfile";
         horizSizing = "right";
         vertSizing = "bottom";
         position = "9 176";
         extent = "248 23";
         minExtent = "8 8";
         visible = "1";
         text = "  Export Interiors with transforms baked in";
         groupNum = "-1";
         buttonType = "ToggleButton";
            helpTag = "0";
            maxLength = "255";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Enabled = "1";
         isContainer = "0";
         HorizSizing = "right";
         VertSizing = "bottom";
         Position = "9 202";
         Extent = "107 24";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         Command = "InteriorExportGui.export();";
         hovertime = "1000";
         text = "Export";
         groupNum = "-1";
         buttonType = "PushButton";
         useMouseEvents = "0";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Enabled = "1";
         isContainer = "0";
         HorizSizing = "right";
         VertSizing = "bottom";
         Position = "174 202";
         Extent = "107 24";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         Command = "InteriorExportGui.close();";
         hovertime = "1000";
         text = "Cancel";
         groupNum = "-1";
         buttonType = "PushButton";
         useMouseEvents = "0";
      };
   };
};
//--- OBJECT WRITE END ---

function InteriorExportGui::findAllInteriors( %this )
{
   InteriorSelectListBox.clearItems();
      
   // Find all of the Interior files
   initContainerTypeSearch( $TypeMasks::InteriorObjectType );

   while ( (%interiorObject = containerSearchNext()) != 0 )
   {
      %interiorName = %interiorObject.getName();
      if ( %interiorName $= "" )
         %interiorName = fileBase(%interiorObject.interiorFile);
   
      %text = %interiorName SPC "(" @ %interiorObject.getId() @ ")";
      InteriorSelectListBox.addItem( %text, %interiorObject );
   }
}

function InteriorExportGui::export( %this )
{
   %selected = InteriorSelectListBox.getSelectedItems();

   %numSel = getWordCount(%selected);

   if ( %numSel == 0 )
      MessageBoxOk("Select Interior(s)", "You must select at least one Interior to export");

   for (%i = 0; %i < %numSel; %i++)
   {
      %index = getWord(%selected, %i);

      %interiorObj = InteriorSelectListBox.getItemObject( %index );

      if (!isObject(%interiorObj))
         continue;

      %interiorObj.exportToCollada(InteriorExportTransToggle.getValue());
   }

   %this.close();
}

function InteriorExportGui::onWake( %this )
{
   %this.findAllInteriors();

   InteriorSelectAllToggle.setValue(false);
   InteriorExportTransToggle.setValue(true);
}

function InteriorExportGui::close( %this )
{
   Canvas.popDialog( %this );
}

function InteriorSelectAllToggle::onClick( %this )
{
   if (InteriorSelectAllToggle.getValue())
   {
      %numItems = InteriorSelectListBox.getItemCount();

      for (%i = 0; %i < %numItems; %i++)
         InteriorSelectListBox.setSelected(%i);
   }
   else
      InteriorSelectListBox.clearSelection();
}

